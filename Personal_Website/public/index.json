[{"authors":["admin"],"categories":null,"content":"My research interests include statistical modeling of fisheries population dynamics, effective data visualization, and developing Shiny applications for communicating research with non-scientist.\n","date":1567296000,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1567296000,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"My research interests include statistical modeling of fisheries population dynamics, effective data visualization, and developing Shiny applications for communicating research with non-scientist.","tags":null,"title":"Megumi Oshima","type":"authors"},{"authors":null,"categories":null,"content":"Flexibility This feature can be used for publishing content such as:\n Online courses Project or software documentation Tutorials  The courses folder may be renamed. For example, we can rename it to docs for software/project documentation or tutorials for creating an online course.\nDelete tutorials To remove these pages, delete the courses folder and see below to delete the associated menu link.\nUpdate site menu After renaming or deleting the courses folder, you may wish to update any [[main]] menu links to it by editing your menu configuration at config/_default/menus.toml.\nFor example, if you delete this folder, you can remove the following from your menu configuration:\n[[main]] name = \u0026quot;Courses\u0026quot; url = \u0026quot;courses/\u0026quot; weight = 50  Or, if you are creating a software documentation site, you can rename the courses folder to docs and update the associated Courses menu configuration to:\n[[main]] name = \u0026quot;Docs\u0026quot; url = \u0026quot;docs/\u0026quot; weight = 50  Update the docs menu If you use the docs layout, note that the name of the menu in the front matter should be in the form [menu.X] where X is the folder name. Hence, if you rename the courses/example/ folder, you should also rename the menu definitions in the front matter of files within courses/example/ from [menu.example] to [menu.\u0026lt;NewFolderName\u0026gt;].\n","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536451200,"objectID":"59c3ce8e202293146a8a934d37a4070b","permalink":"/courses/example/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/courses/example/","section":"courses","summary":"Learn how to use Academic's docs layout for publishing online courses, software documentation, and tutorials.","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":null,"content":"In this tutorial, I'll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"74533bae41439377bd30f645c4677a27","permalink":"/courses/example/example1/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/example/example1/","section":"courses","summary":"In this tutorial, I'll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim.","tags":null,"title":"Example Page 1","type":"docs"},{"authors":null,"categories":null,"content":"Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 4 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"1c2b5a11257c768c90d5050637d77d6a","permalink":"/courses/example/example2/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/example/example2/","section":"courses","summary":"Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus.","tags":null,"title":"Example Page 2","type":"docs"},{"authors":null,"categories":["R"],"content":" The purpose of this tutorial is to share some “hidden” tricks in RStudio that can improve coding efficiency and overall user experience.\nCustomizing your Console You can customize your RStudio setup and layout in the Global Options. You can control everything from the arrangement of your windows, to the font color, to the default working directory and more. Here are just a few examples of settings you can change that may improve the look of your RStudio sessions. Go into Tools -\u0026gt; Global Options and start on the General tab. This is where you can change the default working directory, and control what shows up when you start a new session or saves at the end of a session.\n\nUnder the next tab, Code, we can specify formatting styles we want to use. For example, wrap text helps make code more readable by automatically moving text to the next line when it reaches the edge of the window. This also where you can specify autocompletion functions that make coding faster.\n\nThe next tab, Appearance, is where you can change the color scheme of your script.\n\nClick through some of the other tabs and familiarize yourself with some of the other things you can customize.\n Tools in RStudio The history pane shows a searchable list of previously run commands. You can also access them in the console by hitting the Up arrow until you find it. The arrow key is good for code that was recently run, while the history pane is better for code that was run earlier in the session.\n\nNames of functions, arguments, objects, and files can be autofilled using tab. To autofill a function, begin typing the name (ie fun) and when you see a drop down box of functions hit tab. This is a snippet and it provides the skeleton for commonly used functions. To import a file, the tab button can help find the file. Begin typing the filepath and hit Tab to see a drop down list of files. Scroll through the options using the Up and Down arrows and hit Enter to select the file or folder you want.\n\nIf you want to rename a variable, you can use Rename in Scope. Just highlight the name you want to change, go to Code -\u0026gt; Rename in Scope and it will highlight all occurrences of that exact name so you can edit them all at once.\n\nSections of code can be folded, or hid, to make it easier to navigate through the script and focus on one section at a time. Braced code (ie functions or loops), code chunks (RMarkdown style), text sections between headers within RMarkdown documents, and code sections are foldable. Sections can be defined in three ways:\n# Style one --------------------------- # Style two =========================== ### Style three ####################### You can use the Jump To menu at the bottom of the editor window or the outline view at top of the editor window. This shows the section names and you can quickly go to any one you choose.\n Keyboard Shortcuts Alt + - Assignment arrow\nCtrl + Alt + Shift + M Highlights all occurrences of a word\nCtrl + Alt + Shift + Arrow Creates a second cursor that you can move to lines above or below original Ctrl + Shift + R Inserts new section\nCtrl + Shift + m Pipping symbol\nCtrl + Shift + F search for text in all files in a specified folder\nCtrl + Shift + A Reformats highlighted section to improve readability\nCtrl + . Go to file\nCtrl + Shift + C Comments or uncomments a line Alt + Shift + Down Arrow Copies entire line or mulitple lines (highlighted) below\nFor Macs, replace Ctrl with Cmd\nWe can practice the keyboard shortcuts we’ve learned with this code.\n#Quick history #Run this line then use the up arrow to change the code and rerun. x \u0026lt;- seq(1,20,1) #Try using tab autofill #fun, tab: #if tab: #for tab: #use tab to find a file to read in x.df \u0026lt;- read.csv(\u0026quot;\u0026quot;) #Rename in scope x.df_1 \u0026lt;- x.df[,1] x.df_2 \u0026lt;- x.df[,2] x.df_3 \u0026lt;- x.df[,3] #Reformat these lines to make them easier to read dat \u0026lt;- list(A = x.df, B = x.df_1, C = x.df_2, D = x.df_3) plot(x = dat$A[,2], y = dat$A[,3], xlim = c(30,75), xlab = \u0026quot;Husband\u0026#39;s Age\u0026quot;, ylab = \u0026quot;Wife\u0026#39;s Age\u0026quot;, pch = 16, col = \u0026quot;purple\u0026quot;) #Try using the piping function library(dplyr) data(\u0026quot;iris\u0026quot;) head(iris) iris ___ select(Species, Sepal.Length, Sepal.Width) ____ subset(Sepal.Length \u0026gt; 5) #Use multiple cursors to change the ylims to be the same X \u0026lt;- seq(1,10,1) Y \u0026lt;- rnorm(10, 4, 4) plot(x = X, y = Y, ylim = c(-1,15), pch = 16) plot(x = X, y = Y, ylim = c(-1,7), pch = 16)  Organizing Your Script It is important to keep your scripts organized and annotated to help you and others remember and understand what lines of code are doing. Well organized scripts save time by making it easy to find what you need and prevent you from having to things repeatedly. Here are a few guidelines for writing nice script.\n Use comments to explain what you are doing in a line or section.\n Use sections for chunks of code. They can be run as a group, are searchable in the outline view, and can be hidden when not needed to make scrolling through the script eaiser.\n Use descriptive names when naming scripts, nothing generic or vague like code_01.R. This makes it much easier to go back and find later.\n Put functions into individual scripts so you can easily source them later.\n Keep everything organized and together by projects.\n   How to Use .RProjects RProjects are a tool to organize your work and make it completely self-contained and transportable. This is ideal for when you are collaborating with others and working on code together. When a project is created, a file is created that holds the files associated with that project, including temporary files and the environment. When you open a project, the working directory is set to the project directory, the .RHistory file is loaded, previously loaded scripts are in the editor window, and the global environment is loaded. One way to open a new project is to open RStudio and click the create new project button.\nYou can work with multiple projects at a time in different windows. Another way to create a project is with the package ProjectTemplate. It creates a project directory with pre-defined subfolders to help organize your materials.\nAdvantages of using ProjectTemplate package When you load a project, it searches through the data directory for files and automatically loads any .csv or .sql files it finds. There is a libraries function that will automatically load the necessary libraries when you load the project. First you need to make sure in the config/global.dcf file the load_libraries: TRUE. Then check the libraries it will print out a list of the ones that will be loaded.\ninstall.packages(\u0026quot;ProjectTemplate\u0026quot;) library(ProjectTemplate) create.project(\u0026quot;SWT_RStudio\u0026quot;) setwd(\u0026quot;./SWT_RStudio\u0026quot;) #current working directory /SWT_RStudio load.project() For this example we will be using the mtcars dataset.\ndata(\u0026quot;mtcars\u0026quot;) head(mtcars) save(mtcars, file = \u0026quot;./data/mtcars.csv\u0026quot;) We saved the dataframe in the data folder. Now when we load the project, it will automatically be read into our environment. Now any scripts that we write with code associated with this project can be saved in the src folder. You can also load libraries automatically when the project opens. First, open the config/global.dcf document in a texteditor and set load_libraries to TRUE. If there are specific libraries you need for your analysis, you can add them to the next section, libraries.\nLet’s try creating a new dataframe of any three variables you want.\nmtcars_sub \u0026lt;- mtcars[,c(1,2,4)] head(mtcars_sub) save(mtcars_sub, file = \u0026quot;./data/mtcars_sub.csv\u0026quot;) These tricks are small things that can make your coding life easier and more efficient. Projects are really great for work that you are sharing or collaborating on, big projects that involve multiple scripts and files, and a good way to practice organization.\nThis workshop was taught as part of the 2018 Student Workshop Training Series at USM GCRL.\n  ","date":1578103994,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1578103994,"objectID":"b92cd48c16791c4d294980215afa587c","permalink":"/post/using_rstudio/","publishdate":"2020-01-03T21:13:14-05:00","relpermalink":"/post/using_rstudio/","section":"post","summary":"The purpose of this tutorial is to share some “hidden” tricks in RStudio that can improve coding efficiency and overall user experience.\nCustomizing your Console You can customize your RStudio setup and layout in the Global Options. You can control everything from the arrangement of your windows, to the font color, to the default working directory and more. Here are just a few examples of settings you can change that may improve the look of your RStudio sessions.","tags":null,"title":"Using RStudio","type":"post"},{"authors":[],"categories":["R","Shiny"],"content":"Network Analysis Network anaylsis (NA) is a useful tool for analyzing social, process, or ecological relationships between components of a community. It is a highly flexible tool that is used in many diverse disciplines. We used NA to investigate trophic interactions between marine species in the Gulf of Mexico (GOM). From our investigation, we developed a large database of diet data collected over decades across the GOM and developed a Shiny app to enable anyone to quickly sort through the data and visualize it in a dynamic network style.\nAbout the App The app allows users to select the predator or prey they want to investigate. Once they have selected the species, they can choose the stomach content metric (of those avaialble for that species) they want to use and then an interactive network is generated. In addition to the network visual, a data table is generated that can be downloaded as a .csv file. This Shiny app was developed with the intention of making the collected diet information easily avaiable for other scientist and the public, allow anyone who is interested to quickly visualize the known trophic interactions between GOM species, and then use that data for their own analysis. This promotes transparent and open science. The code for the app can be found here and the app can be accessed here.\n","date":1578096000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1578161151,"objectID":"32cf14bebd61a2940d72cf8ef440a1b5","permalink":"/post/trophic-network-shiny-app/","publishdate":"2020-01-04T00:00:00Z","relpermalink":"/post/trophic-network-shiny-app/","section":"post","summary":"Network Analysis Network anaylsis (NA) is a useful tool for analyzing social, process, or ecological relationships between components of a community. It is a highly flexible tool that is used in many diverse disciplines. We used NA to investigate trophic interactions between marine species in the Gulf of Mexico (GOM). From our investigation, we developed a large database of diet data collected over decades across the GOM and developed a Shiny app to enable anyone to quickly sort through the data and visualize it in a dynamic network style.","tags":[],"title":"Trophic Network Shiny App","type":"post"},{"authors":null,"categories":["R"],"content":" What is a for loop? A for loop is a process that lets you automate a portion of your code by repeating a sequence of instructions a specified number of times. There are a couple of different types of loops (while, for, repeat) and they all have the same structure and purpose. For loops are executed a specified number of times by a vector.\n When and how do you use it? For loops are used when you find yourself repeating the same lines of code. If you want to do the same thing to an entire vector, matrix, or even list. The structure of a for loop is fairly simple, it contains a looping index, an object to loop through, and the actions you want to perform.\nfor (variable in vector) { expression } There are 2 ways to write the looping variable, they each have advantages. The first way is to say for (name in vector). The second way is to use a number index such as for (i in 1:length(vector)). The first way is easy to read and simple but it doesn’t give you an index value. The second one is more writing and not as easy to read sometimes but it gives us more control and options in the expression portion. The second way is more commonly used, especially when you need to subset or index from another vector.\nset.seed(10) df \u0026lt;- data.frame(Name = c(\u0026quot;A\u0026quot;, \u0026quot;B\u0026quot;, \u0026quot;C\u0026quot;, \u0026quot;D\u0026quot;, \u0026quot;E\u0026quot;, \u0026quot;F\u0026quot;, \u0026quot;G\u0026quot;), Age = seq(0,6,1), Month = sample(seq(1,12), 7, replace = T), Length.in = round(seq(3,20,length.out = 7),2)) df ## Name Age Month Length.in ## 1 A 0 7 3.00 ## 2 B 1 4 5.83 ## 3 C 2 6 8.67 ## 4 D 3 9 11.50 ## 5 E 4 2 14.33 ## 6 F 5 3 17.17 ## 7 G 6 4 20.00 for(a in df$Length.in){ print(a) } ## [1] 3 ## [1] 5.83 ## [1] 8.67 ## [1] 11.5 ## [1] 14.33 ## [1] 17.17 ## [1] 20 for(a in df){ print(a) } ## [1] A B C D E F G ## Levels: A B C D E F G ## [1] 0 1 2 3 4 5 6 ## [1] 7 4 6 9 2 3 4 ## [1] 3.00 5.83 8.67 11.50 14.33 17.17 20.00 #Calculating length in inches using name method of writing loop lengths.cm \u0026lt;- c() for(i in df$Length.in){ lengths.cm[i] \u0026lt;- i*2.54 print(lengths.cm) } ## [1] NA NA 7.62 ## [1] NA NA 7.6200 NA 14.8082 ## [1] NA NA 7.6200 NA 14.8082 NA NA 22.0218 ## [1] NA NA 7.6200 NA 14.8082 NA NA 22.0218 NA ## [10] NA 29.2100 ## [1] NA NA 7.6200 NA 14.8082 NA NA 22.0218 NA ## [10] NA 29.2100 NA NA 36.3982 ## [1] NA NA 7.6200 NA 14.8082 NA NA 22.0218 NA ## [10] NA 29.2100 NA NA 36.3982 NA NA 43.6118 ## [1] NA NA 7.6200 NA 14.8082 NA NA 22.0218 NA ## [10] NA 29.2100 NA NA 36.3982 NA NA 43.6118 NA ## [19] NA 50.8000 #Calculating length in inches using indexing method of writing loop lengths.cm \u0026lt;- c() for(i in 1:nrow(df)){ lengths.cm[i] \u0026lt;- df$Length.in[i]*2.54 df$Length.cm[i] \u0026lt;- lengths.cm[i] print(lengths.cm) } ## [1] 7.62 ## [1] 7.6200 14.8082 ## [1] 7.6200 14.8082 22.0218 ## [1] 7.6200 14.8082 22.0218 29.2100 ## [1] 7.6200 14.8082 22.0218 29.2100 36.3982 ## [1] 7.6200 14.8082 22.0218 29.2100 36.3982 43.6118 ## [1] 7.6200 14.8082 22.0218 29.2100 36.3982 43.6118 50.8000 df ## Name Age Month Length.in Length.cm ## 1 A 0 7 3.00 7.6200 ## 2 B 1 4 5.83 14.8082 ## 3 C 2 6 8.67 22.0218 ## 4 D 3 9 11.50 29.2100 ## 5 E 4 2 14.33 36.3982 ## 6 F 5 3 17.17 43.6118 ## 7 G 6 4 20.00 50.8000 #To find the difference in lengths between each fish for(i in 1:nrow(df)-1){ print(df$Length.in[i+1] - df$Length.in[i]) } ## numeric(0) ## [1] 2.83 ## [1] 2.84 ## [1] 2.83 ## [1] 2.83 ## [1] 2.84 ## [1] 2.83  Practice writing your own loops #Write a loop to calculate 1/2, 2/3, 3/4, and 5/6. for(i in 1: ){ }  Control Statements There are two control statements you can use in loops, break and next. These are conditional and tell the loop to either stop or skip over an element and continue onto the next one if a certain condition is met.\n#Use the next control statement to write a loop that adds another year to the age if the fish was caught after June (Month \u0026gt; 6). for (i in 1:nrow(df)) { if(){ next }else } df #Use the break control statement to subset the fish younger than 4. fish.sub \u0026lt;- df[FALSE,] for (i in 1:nrow(df)) { if(){ break }else } fish.sub Possible solutions for (i in 1:nrow(df)) { if(df[i,3] \u0026lt; 6){ next }else df$Age[i] \u0026lt;- df$Age[i] + 1 } fish.sub \u0026lt;- df[FALSE,] for (i in 1:nrow(df)) { if(df[i,2] \u0026gt; 3){ break }else fish.sub[i,] \u0026lt;- df[i,] } fish.sub ## Name Age Month Length.in Length.cm ## 1 A 1 7 3.00 7.6200 ## 2 B 1 4 5.83 14.8082 ## 3 C 3 6 8.67 22.0218   Using for loops to plot If you need to create several plots of the same thing or one plot with many lines of different values it can be useful to use a for loop. The strucutre is pretty much the same as normal loop but you make a blank plot first.\nlibrary(RColorBrewer) col. = brewer.pal(5, \u0026quot;Set2\u0026quot;) plot(0, 0, type = \u0026quot;n\u0026quot;, xlab = \u0026quot;Age\u0026quot;, ylab = \u0026quot;Length\u0026quot;, xlim = c(0,max(df$Age)), ylim = c(0,max(df$Length.cm))) for(i in 4:5){ points(x = df$Age, y = df[,i], pch = 16, col = col.[i]) } par(mfrow = c(1,2)) for (i in 4:5){ plot(x = df$Age, y = df[,i], pch = 16, col = col.[i], xlab = \u0026quot;Age\u0026quot;, ylab = \u0026quot;Length\u0026quot;) }  Nested loops Loops can be nested, with two or more for loops within each other. This is useful when dealing with matrices. Here’s an example of a nested loop. This loop is setting each element in the matrix based on its position in the matrix.\nmymat = matrix(nrow=10, ncol=10) # create a 10 x 10 matrix (of 10 rows and 10 columns) for(i in 1:dim(mymat)[1]) # for each row { for(j in 1:dim(mymat)[2]) # for each column { mymat[i,j] = i*j # assign values based on position: product of two indexes } } mymat ## [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] ## [1,] 1 2 3 4 5 6 7 8 9 10 ## [2,] 2 4 6 8 10 12 14 16 18 20 ## [3,] 3 6 9 12 15 18 21 24 27 30 ## [4,] 4 8 12 16 20 24 28 32 36 40 ## [5,] 5 10 15 20 25 30 35 40 45 50 ## [6,] 6 12 18 24 30 36 42 48 54 60 ## [7,] 7 14 21 28 35 42 49 56 63 70 ## [8,] 8 16 24 32 40 48 56 64 72 80 ## [9,] 9 18 27 36 45 54 63 72 81 90 ## [10,] 10 20 30 40 50 60 70 80 90 100  Alternatives to for loops An alternative to for loops is the apply family. It works with vector form and can be faster and easier to write than for loops. There are four main functions:\n apply(): works on matrices\n lapply(): works across lists and vectors\n sapply(): simplifies output into a vector\n mapply(): pass multiple variables or function arguments  The apply function takes 3 arguments, the object to be manipulated, the margin over which to apply the function (do you want to do it by rows(1) or by columns (2)), and the function you want to do. The function can be a built in one or one that you write. If the function you are using has additional arguments, you put that after the function. The structure looks like this: apply(mymat, 2, sum, na.rm = TRUE). This would calculate the sum of each column in the matrix and remove NA’s.\n ","date":1578017594,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1578017594,"objectID":"10065deaa3098b0da91b78b48d0efc71","permalink":"/post/2015-07-23-r-rmarkdown/","publishdate":"2020-01-02T21:13:14-05:00","relpermalink":"/post/2015-07-23-r-rmarkdown/","section":"post","summary":"What is a for loop? A for loop is a process that lets you automate a portion of your code by repeating a sequence of instructions a specified number of times. There are a couple of different types of loops (while, for, repeat) and they all have the same structure and purpose. For loops are executed a specified number of times by a vector.\n When and how do you use it?","tags":["R"],"title":"For Loops","type":"post"},{"authors":["Robert Leaf","Megumi Oshima"],"categories":null,"content":"","date":1567296000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567296000,"objectID":"29488d64412402160ef14f912e5cfa94","permalink":"/publication/journal-article/leaf2019/","publishdate":"2019-03-01T00:00:00Z","relpermalink":"/publication/journal-article/leaf2019/","section":"publication","summary":"","tags":["Source Themes"],"title":"Construction and evaluation of a robust trophic network model for the northern Gulf of Mexico ecosystem","type":"publication"},{"authors":["Megumi Oshima"],"categories":null,"content":"","date":1559725200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1559725200,"objectID":"96344c08df50a1b693cc40432115cbe3","permalink":"/talk/example/","publishdate":"2019-06-05T00:00:00Z","relpermalink":"/talk/example/","section":"talk","summary":"An introduction to R.","tags":[],"title":"Introduction to R","type":"talk"},{"authors":[],"categories":[],"content":"What is R?  Ross Ihaka and Robert Gentleman 2000 Object-oriented Statistical analyses Data visualization (publication quality figures) Free, open source Active user community that contributes packages Interpreted   RStudio  Base R An integrated development environment (IDE) Runs R   Basic Code Syntax x \u0026lt;- 1 x = 1 function(arg1, arg2, arg3) # Comments   Data Structures  Numeric Integer Character Factor Vectors Matrix Array Dataframe Tibble List   Installing Packages install.packages(\u0026quot;package\u0026quot;) #Notice the use of \u0026quot; \u0026quot; when installing but not when calling it library(package) require(package)   Working directory getwd() list.files(pattern = \u0026quot;.csv\u0026quot;) iris \u0026lt;- read.csv(\u0026quot;iris.csv\u0026quot;)   Indexing vector[1] dataframe[row, col] df[ ,col] #all rows df[row, ] #all columns list[[]] list[[]][row, col] #for dataframes in a list which()   Loops  For loops While loops  for(i in 1:10){ some function(i) } while(i in x){ some function(i) }  i is the iterator, it has no real significance and can be named anything you like. It is recommended to name it based on what you are using it to loop through to make your code easier to follow.  Logic  if( ) ifelse( ) is.___( ) == or != TRUE (T) or FALSE (F)   Best Practices for Coding  use spaces between arguments use the \u0026lt;- for assignment instead of = use #comments to annotate your code!  ","date":1559692800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1559692800,"objectID":"70d15435870364619f87831beadea30b","permalink":"/slides/","publishdate":"2019-06-05T00:00:00Z","relpermalink":"/slides/","section":"","summary":"An introduction to R coding language.","tags":[],"title":"Intro to R","type":"page"},{"authors":["Megumi Oshima","Robert Leaf"],"categories":null,"content":"","date":1535760000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1535760000,"objectID":"888b55c1265487437ad12eec8257a89f","permalink":"/publication/journal-article/oshima2018/","publishdate":"2018-11-01T00:00:00Z","relpermalink":"/publication/journal-article/oshima2018/","section":"publication","summary":"","tags":["Source Themes"],"title":"Understanding the structure and resilience of trophic dynamics in the northern Gulf of Mexico using network analysis","type":"publication"},{"authors":null,"categories":null,"content":"Here you can store any documentation that you've written about your analysis. When pushing the project to GitHub you can use this directory as the root for a GitHub Pages website for the project. For more information see https://github.com/blog/2289-publishing-with-github-pages-now-as-easy-as-1-2-3\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"e27687539940c4ef312f370bbceb5d08","permalink":"/post/usingrstudio/readme/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/post/usingrstudio/readme/","section":"post","summary":"Here you can store any documentation that you've written about your analysis. When pushing the project to GitHub you can use this directory as the root for a GitHub Pages website for the project. For more information see https://github.com/blog/2289-publishing-with-github-pages-now-as-easy-as-1-2-3","tags":null,"title":"","type":"post"}]